include "general.conf"

akka {

  //  loggers = ["akka.event.slf4j.Slf4jLogger"]
  //loggers = ["akka.event.Logging$DefaultLogger"]
  stdout-loglevel = "DEBUG"
  //loglevel = "OFF"
  //  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {
    //provider = "cluster"
    serializers {
     java = "org.jaun.clubmanager.eventstore.akka.JsonSerializer",
    }

    serialization-bindings {
      "java.io.Serializable" = java
    }
  }
  //  remote {
  //    log-remote-lifecycle-events = off
  //    netty.tcp {
  //      hostname = "127.0.0.1"
  //      port = 42551
  //    }
  //  }
  //
  //  cluster {
  //    seed-nodes = [
  //      "akka.tcp://cm-akka@127.0.0.1:42551",
  //      "akka.tcp://cm-akka@127.0.0.1:42552"]
  //
  //    # auto downing is NOT safe for production deployments.
  //    # you may want to use it during development, read more about it in the docs.
  //    #
  //    # auto-down-unreachable-after = 10s
  //  }

  persistence {
    journal {
      plugin = "jdbc-journal"
      // Enable the line below to automatically start the journal when the actorsystem is started
      // auto-start-journals = ["jdbc-journal"]
    }
    snapshot-store {
      plugin = "jdbc-snapshot-store"
      // Enable the line below to automatically start the snapshot-store when the actorsystem is started
      // auto-start-snapshot-stores = ["jdbc-snapshot-store"]
    }
  }
}

slick {
  driver = "slick.driver.PostgresDriver$"
  db {
    url = "jdbc:postgresql://localhost:5432/eventdb?user=postgres&password=password"
    url = ${?JDBC_DATABASE_URL}
    //user = "postgres"
    //password = "password"
    driver = "org.postgresql.Driver"

    // hikariCP
    numThreads = 1 // number of cores
    maxConnections = 1 // 2 * numThreads + 1 (if running on an SSD)
    minConnections = 1  // same as numThreads

    connectionTestQuery = SELECT 1 // postgres doesnt support connection timeout
  }
}

jdbc-journal {
  event-adapters {
    tagging = "org.jaun.clubmanager.eventstore.akka.TaggingEventAdapter"
  }
  event-adapter-bindings {
      "org.jaun.clubmanager.eventstore.akka.EventDataWithStreamId" = tagging
    }
  slick = ${slick}
}

jdbc-snapshot-store {

  slick = ${slick}
}

# the akka-persistence-query provider in use
jdbc-read-journal {
  slick = ${slick}
}