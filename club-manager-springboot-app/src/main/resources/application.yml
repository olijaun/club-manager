app:
  datasource:
    jdbc-url: ${JDBC_DATABASE_URL}
    pool-size: 30

server:
  port: ${PORT:8080}

security:
  oauth2:
    client:
      clientId: 491896501327-ju1tptdg1s6d54ve6uk2530iak44amep.apps.googleusercontent.com
      clientSecret: gc-P5u5yV3HZtgd0kPLMXBqG
      userAuthorizationUri: https://accounts.google.com/o/oauth2/v2/auth
#      accessTokenUri: https://www.googleapis.com/oauth2/v4/token
      useCurrentUri: false
      preEstablishedRedirectUri: http://localhost:8080/login
      scope: openid profile email
      clientAuthenticationScheme: form
    resource:
      tokenInfoUri: https://www.googleapis.com/oauth2/v3/tokeninfo
      userInfoUri: https://www.googleapis.com/oauth2/v3/userinfo

machine2machine:
  url: ${M2M_URL:https://jaun.eu.auth0.com/oauth/token}
  clientId: ${M2M_CLIENT_ID:2Ggwn7qS7QqLaeX6M4K91bKXntfwYxXk}
  clientSecret: ${M2M_CLIENT_SECRET:yKTON-g1HxGIHvjymnONrwkoxWHZuLgE298kul6IH7dGnyly1ChLXyI0_0TxFTj_}
  audience: ${M2M_AUDIENCE:https://member-manager.jaun.org}
  grantType: ${M2M_GRANT_TYPE:client_credentials}
  scope: ${M2M_SCOPE:m2m}

webServices:
  personService:
    url: ${PERSONS_URL:http://localhost:8080/api/persons}
  countryService:
    url: ${COUNTRIES_URL:https://restcountries.eu/}

akkaEventStore:
  actorSystemName: eventStore
